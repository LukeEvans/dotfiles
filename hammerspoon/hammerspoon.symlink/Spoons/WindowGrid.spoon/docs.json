[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "parameters" : [

        ],
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "notes" : [

        ],
        "signature" : "WindowGrid.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "def" : "WindowGrid.logger"
      },
      {
        "doc" : "Table containing a list of arguments to be passed to grid.setGrid(). Each element in the table is itself a table with 1-3 arguments as defined for [hs.grid.setGrid()](http:\/\/www.hammerspoon.org\/docs\/hs.grid.html#setGrid). Defaults to an empty list, which results in the default 3x3 grid for all screen from `hs.grid`.",
        "stripped_doc" : [
          "Table containing a list of arguments to be passed to grid.setGrid(). Each element in the table is itself a table with 1-3 arguments as defined for [hs.grid.setGrid()](http:\/\/www.hammerspoon.org\/docs\/hs.grid.html#setGrid). Defaults to an empty list, which results in the default 3x3 grid for all screen from `hs.grid`."
        ],
        "parameters" : [

        ],
        "desc" : "Table containing a list of arguments to be passed to grid.setGrid(). Each element in the table is itself a table with 1-3 arguments as defined for [hs.grid.setGrid()](http:\/\/www.hammerspoon.org\/docs\/hs.grid.html#setGrid). Defaults to an empty list, which results in the default 3x3 grid for all screen from `hs.grid`.",
        "notes" : [

        ],
        "signature" : "WindowGrid.gridGeometries",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "gridGeometries",
        "def" : "WindowGrid.gridGeometries"
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Configure and assign hotkey for `hs.grid`",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "Configure and assign hotkey for `hs.grid`\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WindowGrid.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WindowGrid.spoon.zip)",
    "Method" : [
      {
        "doc" : "Binds hotkeys for WindowGrid\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * show_grid - show the grid overlay",
        "stripped_doc" : [
          "Binds hotkeys for WindowGrid",
          ""
        ],
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * show_grid - show the grid overlay"
        ],
        "desc" : "Binds hotkeys for WindowGrid",
        "notes" : [

        ],
        "signature" : "WindowGrid:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "bindHotkeys",
        "def" : "WindowGrid:bindHotkeys(mapping)"
      },
      {
        "doc" : "Sets the grid configuration according to `WindowGrid.gridGeometries`.",
        "stripped_doc" : [
          "Sets the grid configuration according to `WindowGrid.gridGeometries`."
        ],
        "parameters" : [

        ],
        "desc" : "Sets the grid configuration according to `WindowGrid.gridGeometries`.",
        "notes" : [

        ],
        "signature" : "WindowGrid:start()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "start",
        "def" : "WindowGrid:start()"
      }
    ],
    "Command" : [

    ],
    "items" : [
      {
        "doc" : "Table containing a list of arguments to be passed to grid.setGrid(). Each element in the table is itself a table with 1-3 arguments as defined for [hs.grid.setGrid()](http:\/\/www.hammerspoon.org\/docs\/hs.grid.html#setGrid). Defaults to an empty list, which results in the default 3x3 grid for all screen from `hs.grid`.",
        "stripped_doc" : [
          "Table containing a list of arguments to be passed to grid.setGrid(). Each element in the table is itself a table with 1-3 arguments as defined for [hs.grid.setGrid()](http:\/\/www.hammerspoon.org\/docs\/hs.grid.html#setGrid). Defaults to an empty list, which results in the default 3x3 grid for all screen from `hs.grid`."
        ],
        "parameters" : [

        ],
        "desc" : "Table containing a list of arguments to be passed to grid.setGrid(). Each element in the table is itself a table with 1-3 arguments as defined for [hs.grid.setGrid()](http:\/\/www.hammerspoon.org\/docs\/hs.grid.html#setGrid). Defaults to an empty list, which results in the default 3x3 grid for all screen from `hs.grid`.",
        "notes" : [

        ],
        "signature" : "WindowGrid.gridGeometries",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "gridGeometries",
        "def" : "WindowGrid.gridGeometries"
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "parameters" : [

        ],
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "notes" : [

        ],
        "signature" : "WindowGrid.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "def" : "WindowGrid.logger"
      },
      {
        "doc" : "Binds hotkeys for WindowGrid\n\nParameters:\n * mapping - A table containing hotkey objifier\/key details for the following items:\n  * show_grid - show the grid overlay",
        "stripped_doc" : [
          "Binds hotkeys for WindowGrid",
          ""
        ],
        "parameters" : [
          " * mapping - A table containing hotkey objifier\/key details for the following items:",
          "  * show_grid - show the grid overlay"
        ],
        "desc" : "Binds hotkeys for WindowGrid",
        "notes" : [

        ],
        "signature" : "WindowGrid:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "bindHotkeys",
        "def" : "WindowGrid:bindHotkeys(mapping)"
      },
      {
        "doc" : "Sets the grid configuration according to `WindowGrid.gridGeometries`.",
        "stripped_doc" : [
          "Sets the grid configuration according to `WindowGrid.gridGeometries`."
        ],
        "parameters" : [

        ],
        "desc" : "Sets the grid configuration according to `WindowGrid.gridGeometries`.",
        "notes" : [

        ],
        "signature" : "WindowGrid:start()",
        "type" : "Method",
        "returns" : [

        ],
        "name" : "start",
        "def" : "WindowGrid:start()"
      }
    ],
    "Field" : [

    ],
    "name" : "WindowGrid"
  }
]