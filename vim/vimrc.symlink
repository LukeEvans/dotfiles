" Vundle bootstrap
if !filereadable($HOME . '/.vim/bundle/vundle/.git/config') && confirm("Clone Vundle?","Y\nn") == 1
    exec '!git clone https://github.com/gmarik/Vundle.vim ~/.vim/bundle/vundle/'
endif

syntax on

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/nerdtree'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

let mapleader = " "
map <Space> <leader>
nnoremap <leader>ne :NERDTree<cr>
nnoremap <leader>wq :wq<cr>
nnoremap <leader>q :q<cr>


syntax on
if (&tildeop)
	nmap gcw guw~l
	nmap gcW guW~l
	nmap gciw guiw~l
	nmap gciW guiW~l
	nmap gcis guis~l
	nmap gc$ gu$~l
	nmap gcgc guu~l
	nmap gcc guu~l
	vmap gc gu~l
else
	nmap gcw guw~h
	nmap gcW guW~h
	nmap gciw guiw~h
	nmap gciW guiW~h
	nmap gcis guis~h
	nmap gc$ gu$~h
	nmap gcgc guu~h
	nmap gcc guu~h
	vmap gc gu~h
endif

set whichwrap+=<,>,h,l,[,]

set relativenumber

function! NumberToggle()
  if(&relativenumber == 1)
    set number
  else
    set relativenumber
  endif
endfunc

nnoremap <C-n> :call NumberToggle()<cr>

:au FocusLost * :set number
:au FocusGained * :set relativenumber

set pastetoggle=<F3>



autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber


" show leading spaces
" hi Conceal guibg=NONE ctermbg=NONE ctermfg=DarkGrey
" autocmd BufWinEnter * setl conceallevel=2 concealcursor=nv
" autocmd BufWinEnter * syn match LeadingSpace /\(^ *\)\@<= / containedin=ALL conceal cchar=·
" autocmd BufReadPre * setl conceallevel=2 concealcursor=nv
" autocmd BufReadPre * syn match LeadingSpace /\(^ *\)\@<= / containedin=ALL conceal cchar=·
"
" set pasteboard to mac's system clipboard
set clipboard=unnamed
